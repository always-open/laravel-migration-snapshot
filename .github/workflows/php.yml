name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
        fail-fast: true
        matrix:
            php: [ 8.3, 8.4 ]
            laravel: [ 11.*, 12.* ]
            stability: [ prefer-stable ]
            postgres: [ 14, 16 ]

    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_DB: forge
          POSTGRES_USER: forge
          # HACK: TestBench seems to assume blank password, at least w/GHA.
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    # Reuse bundled MySQL for speed and simplicity.
    - name: Start bundled MySQL
      # HACK: TestBench seems to assume blank password, at least w/GHA.
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE forge;' --user=root --password=root
        mysql -e "CREATE USER 'forge'@'localhost' IDENTIFIED BY '';" --user=root --password=root
        mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'forge'@'localhost';" --user=root --password=root

    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: pcov

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test
